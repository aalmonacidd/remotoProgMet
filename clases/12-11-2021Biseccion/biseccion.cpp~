#include <iostream>
#include <cmath>
#include <cstdlib>

double f(double X);
template <class fptr>
double biseccion(double xl, double xu, fptr fun, double eps);

int main(int argc, char **argv){
  const double xl= std::atof(argv[1]);
  const	double xu= std::atof(argv[2]);
  const	double eps= std::atof(argv[3]);
  std::cout<<biseccion(xl,xu,f,eps)<<std::endl;

  return 0;

}

double f(double x){
  return 9.81*(68.1)*(1-std::exp(-x*10/68.1))/x - 40;

}
template <class fptr>
double biseccion(double xl, double xu, fptr fun, double eps){
  int iter=0;
  double xr=0;
  for(; ;){
      xr=(xl+xu)/2;
      if(std::fabs(fun(xr)<=eps)) break;
      iter++;
      if(fun(xr)*fun(xl)<0){
	xu=xr;
      }
      else{
	xl=xr;
      }
    }
  return xr;
}
		      


	       
